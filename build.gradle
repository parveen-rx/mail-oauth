import org.ajoberstar.grgit.Grgit

buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.ajoberstar:gradle-git:1.4.2"
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.4.RELEASE"
    id "com.jfrog.bintray" version "1.2"
}

version "1.0-M1"
group "org.grails.plugins"

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"
apply plugin: "org.grails.grails-gsp"
apply plugin: "org.ajoberstar.grgit"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    provided 'org.springframework.boot:spring-boot-starter-logging'
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"

    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-dependencies"
    provided 'javax.servlet:javax.servlet-api:3.1.0'

    testCompile "org.grails:grails-plugin-testing"

    console "org.grails:grails-console"

    compile 'org.grails.plugins:mail:2.0.1'
    compile 'com.github.scribejava:scribejava-core:8.3.1'
    compile 'com.github.scribejava:scribejava-apis:8.3.1'
    runtime group: 'io.projectreactor', name: 'reactor-core', version: '3.4.14'
    compile 'com.microsoft.graph:microsoft-graph:5.+'
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

def repo = Grgit.open('.')
jar {
    manifest {
        attributes("Built-By": System.getProperty("user.name"))
        attributes(["Plugin-Version"        : version,
                    "Plugin-Title"          : project.name,
                    "Plugin-Build-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    "Git-Commit"            : repo.head().getAbbreviatedId(8),
                    "Git-Branch"            : repo.branch.getCurrent().getName()])
    }
    from sourceSets.main.output
}

publishing {
    publications {
        mavenJar(MavenPublication) {
            pom.withXml {
                def pomNode = asNode()
                pomNode.dependencyManagement.replaceNode {}

                // simply remove dependencies without a version
                // version-less dependencies are handled with dependencyManagement
                // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
                pomNode.dependencies.dependency.findAll {
                    it.version.text().isEmpty()
                }.each {
                    it.replaceNode {}
                }
            }
            from components.java
            artifact sourceJar
        }
    }
    repositories {
        maven {
            credentials {
                username ""
                password ""
            }
            url "http://10.100.3.6:8080/nexus/content/repositories/common-component-snapshots/"
        }
    }
}
